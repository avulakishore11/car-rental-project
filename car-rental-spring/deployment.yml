
# Namespace (optional if already created)
apiVersion: v1
kind: Namespace
metadata:
  name: prod-app
---
# Angular UI Service
apiVersion: v1
kind: Service
metadata:
  name: ui-service
  namespace: prod-app
spec:
  selector:
    app: ui
  ports:
    - protocol: TCP
      port: 80
      targetPort: 80
  type: ClusterIP
---
# Angular UI Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ui-deployment
  namespace: prod-app
spec:
  replicas: 2
  selector:
    matchLabels:
      app: ui
  template:
    metadata:
      labels:
        app: ui
    spec:
      containers:
        - name: ui
          image: repo12.azurecr.io/angular-image:v1.0
          ports:
            - containerPort: 80
---
# Spring Boot Backend Service
apiVersion: v1
kind: Service
metadata:
  name: backend-service
  namespace: prod-app
spec:
  selector:
    app: backend
  ports:
    - protocol: TCP
      port: 80
      targetPort: 8080
  type: ClusterIP
---
# Spring Boot Backend Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend-deployment
  namespace: prod-app
spec:
  replicas: 2
  selector:
    matchLabels:
      app: backend
  template:
    metadata:
      labels:
        app: backend
    spec:
      containers:
        - name: backend
          image: repo12.azurecr.io/spring-image:v1.0
          ports:
            - containerPort: 8080
---
# Ingress for Angular UI and Spring Boot Backend
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: app-ingress
  namespace: prod-app
  annotations:
    kubernetes.io/ingress.class: azure/application-gateway
spec:
  ingressClassName: azure-application-gateway
  rules:
    - http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: ui-service
                port:
                  number: 80
          - path: /api
            pathType: Prefix
            backend:
              service:
                name: backend-service
                port:
                  number: 80
